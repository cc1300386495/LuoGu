# P1228 地毯填补问题
# 思路：
# 首先，当k = 1时，即 2*2的正方形时，解法显而易见
# 那么，当k = 2时，可以拆分成4个2*2的小正方形，但只有公主所处的小正方形才可以直接求解
# 剩下的3个2*2小正方形由于没有公主，无法铺满。
# 但可以发现，我们可以通过一个地毯给剩下的每个小正方形人为的构造一个公主，从而求解。
# 如果所示： * 代表真正的公主，+ 代表通过地摊替代公主的作用，0 代表空地
# 0 0 0 0
# 0 * + 0
# 0 + + 0
# 0 0 0 0
# 从上可以看出，此时相当于每个小正方形内都有了一个公主
# 由上述不难看出，对于2^k次方问题，我们可以将其化简为4个2*(k-1)个问题，这就是递归的过程

k = int(input())
x, y = map(int, input().split())


def solve(x, y, a, b, k):
    # x,y表示每个正方形"公主"的坐标
    # a,b表示当前正方形左上角的坐标
    # k表示正方形的长度
    if k == 1:
        return
    # 将这个正方形拆分成四个小正方形
    elif (x-a <= k//2-1 and y-b <= k//2-1):
        # 如果此刻公主在左上角，中心位置补1号地毯，使得剩下三个小正方形有"公主"
        print("%d %d 1" % (a+k//2, b+k//2))
        # 递归处理四个小正方形
        solve(x, y, a, b, k//2)
        solve(a+k//2-1, b+k//2, a, b+k//2, k//2)
        solve(a+k//2, b+k//2-1, a+k//2, b, k//2)
        solve(a+k//2, b+k//2, a+k//2, b+k//2, k//2)
    elif (x-a <= k//2-1 and y-b > k//2-1):
        print("%d %d 2" % (a+k//2, b+k//2-1))
        solve(a+k//2-1, b+k//2-1, a, b, k//2)
        solve(x, y, a, b+k//2, k//2)
        solve(a+k//2, b+k//2-1, a+k//2, b, k//2)
        solve(a+k//2, b+k//2, a+k//2, b+k//2, k//2)
    elif (x-a > k//2-1 and y-b <= k//2-1):
        print("%d %d 3" % (a+k//2-1, b+k//2))
        solve(a+k//2-1, b+k//2-1, a, b, k//2)
        solve(a+k//2-1, b+k//2, a, b+k//2, k//2)
        solve(x, y, a+k//2, b, k//2)
        solve(a+k//2, b+k//2, a+k//2, b+k//2, k//2)
    else:
        print("%d %d 4" % (a+k//2-1, b+k//2-1))
        solve(a+k//2-1, b+k//2-1, a, b, k//2)
        solve(a+k//2-1, b+k//2, a, b+k//2, k//2)
        solve(a+k//2, b+k//2-1, a+k//2, b, k//2)
        solve(x, y, a+k//2, b+k//2, k//2)


k = 2 ** (k)
solve(x, y, 1, 1, k)
